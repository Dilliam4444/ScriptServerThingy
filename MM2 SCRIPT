--// Seagull MM2 — OP Build (Rayfield v4, tabs-not-sections)
-- Buttons render, elements follow docs (CurrentValue/Range/CurrentOption = {"x"})

pcall(function() getgenv().SecureMode = true end)

-- ==== CONFIG ====
local DISCORD_INVITE = "https://discord.gg/your-server-code" -- change this
local AUTORUN_MAIN_LOGIC = false
local MAIN_LOGIC_URL = "https://raw.githubusercontent.com/Drifter0507/GUIS/main/MURDER%20MYSTERY%202"
-- ================

-- Services
local Players = game:GetService("Players")
local LP      = Players.LocalPlayer
local RS      = game:GetService("RunService")
local UIS     = game:GetService("UserInputService")
local WS      = game:GetService("Workspace")
local SG      = game:GetService("StarterGui")
local CG      = game:GetService("CoreGui")
local RP      = game:GetService("ReplicatedStorage")

-- Helpers
local function tip(t, x, d) pcall(function()
    SG:SetCore("SendNotification", {Title=t or "Seagull", Text=x or "", Duration=d or 4})
end) end
local function v3(x,y,z) return Vector3.new(x,y,z) end

-- Guard (MM2)
local MM2 = { [142823291]=true, [6561005782]=true }
if not MM2[game.PlaceId] then tip("MM2 Menu","Wrong game. Load in MM2.",6) return end

-- Character refs
local Char, Hum, Root
local function refreshChar()
    Char = LP.Character or LP.CharacterAdded:Wait()
    Hum  = Char:FindFirstChildOfClass("Humanoid")
    Root = Char:FindFirstChild("HumanoidRootPart")
end
refreshChar()
LP.CharacterAdded:Connect(function() task.wait(0.25); refreshChar() end)

-- Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Window = Rayfield:CreateWindow({
    Name = "🔪 MM2 — Seagull Menu",
    LoadingTitle = "Seagull UI",
    LoadingSubtitle = "OP Edition",
    Theme = "Default",
    ToggleUIKeybind = "K",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "SeagullProjects",
        FileName  = "MM2_Seagull_OP"
    },
    Discord = {
        Enabled = false, -- if you want Rayfield’s built-in join badge, set true + Invite code
        Invite = "your-server-code",
        RememberJoins = true
    }
})

-- Tabs (controls go on Tabs, not Sections)
local TabMain   = Window:CreateTab("🏠 Main",      "home")
local TabESP    = Window:CreateTab("⭕ ESP",       "radar")
local TabOP     = Window:CreateTab("💥 OP",        "zap")
local TabLogic  = Window:CreateTab("🧠 Main Logic","cpu")
local TabMisc   = Window:CreateTab("⚙️ Misc",      "settings")

TabMain:CreateSection("Core Controls")
TabESP:CreateSection("ESP & Tracking")
TabOP:CreateSection("OP Tools")
TabLogic:CreateSection("External Loader")
TabMisc:CreateSection("Utilities")

-------------------------------------------------
-- MAIN (simple, proven working)
-------------------------------------------------
TabMain:CreateButton({
    Name = "Ping (test button)",
    Callback = function()
        Rayfield:Notify({Title="Pong!", Content="Buttons are working ✅", Duration=3, Image="bell"})
    end
})

getgenv().ClickTP = false
TabMain:CreateToggle({
    Name = "CTRL + Click Teleport",
    CurrentValue = false,
    Flag = "ClickTP",
    Callback = function(v) getgenv().ClickTP = v end
})
do
    local mouse = LP:GetMouse()
    mouse.Button1Down:Connect(function()
        if not getgenv().ClickTP then return end
        if not UIS:IsKeyDown(Enum.KeyCode.LeftControl) then return end
        if not mouse.Target or not Root then return end
        Char:MoveTo(mouse.Hit.Position)
    end)
end

TabMain:CreateSlider({
    Name = "WalkSpeed",
    Range = {16, 200},
    Increment = 1,
    Suffix = "stud/s",
    CurrentValue = 16,
    Flag = "WalkSpeed",
    Callback = function(v) if Hum then Hum.WalkSpeed = v end end
})
TabMain:CreateSlider({
    Name = "JumpPower",
    Range = {50, 200},
    Increment = 1,
    CurrentValue = 50,
    Flag = "JumpPower",
    Callback = function(v) if Hum then Hum.JumpPower = v end end
})

getgenv().InfJump = false
TabMain:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Flag = "InfJump",
    Callback = function(v) getgenv().InfJump = v end
})
UIS.JumpRequest:Connect(function()
    if getgenv().InfJump and Hum then Hum:ChangeState(Enum.HumanoidStateType.Jumping) end
end)

-- Fly
getgenv().FlySpeed = 50
local flyOn, bv
TabMain:CreateToggle({
    Name = "Fly (camera directions)",
    CurrentValue = false,
    Flag = "Fly",
    Callback = function(v)
        flyOn = v
        if not Char or not Hum then return end
        if v then
            Hum.PlatformStand = true
            local head = Char:FindFirstChild("Head")
            if head then
                bv = Instance.new("BodyVelocity")
                bv.MaxForce = v3(1e5,1e5,1e5)
                bv.P = 4000
                bv.Velocity = Vector3.zero
                bv.Parent = head
            end
        else
            if bv then bv:Destroy() bv=nil end
            Hum.PlatformStand = false
        end
    end
})
TabMain:CreateSlider({
    Name = "Fly Speed",
    Range = {20,150},
    Increment = 1,
    CurrentValue = 50,
    Flag = "FlySpeed",
    Callback = function(v) getgenv().FlySpeed = v end
})
do
    local keys = {W=false,A=false,S=false,D=false}
    UIS.InputBegan:Connect(function(i,g) if g then return end
        if i.KeyCode==Enum.KeyCode.W then keys.W=true end
        if i.KeyCode==Enum.KeyCode.S then keys.S=true end
        if i.KeyCode==Enum.KeyCode.A then keys.A=true end
        if i.KeyCode==Enum.KeyCode.D then keys.D=true end
    end)
    UIS.InputEnded:Connect(function(i,g) if g then return end
        if i.KeyCode==Enum.KeyCode.W then keys.W=false end
        if i.KeyCode==Enum.KeyCode.S then keys.S=false end
        if i.KeyCode==Enum.KeyCode.A then keys.A=false end
        if i.KeyCode==Enum.KeyCode.D then keys.D=false end
    end)
    RS.Heartbeat:Connect(function()
        if flyOn and Hum and bv and Root then
            local cam = WS.CurrentCamera
            local look, right = cam.CFrame.LookVector, cam.CFrame.RightVector
            local v = Vector3.zero
            if keys.W then v += look end
            if keys.S then v -= look end
            if keys.A then v -= right end
            if keys.D then v += right end
            bv.Velocity = (v.Magnitude>0) and v.Unit*(getgenv().FlySpeed or 50) or Vector3.zero
        end
    end)
    LP.CharacterAdded:Connect(function() if bv then bv:Destroy() bv=nil end end)
end

-------------------------------------------------
-- ESP & role tracking
-------------------------------------------------
local ESPFolder = Instance.new("Folder")
ESPFolder.Name = "ESP_Seagull"
ESPFolder.Parent = CG

-- Simple nameplates
local function addBB(p)
    if p == LP then return end
    local bb = Instance.new("BillboardGui")
    bb.Name = p.Name
    bb.AlwaysOnTop = true
    bb.Size = UDim2.fromOffset(200, 50)
    bb.ExtentsOffset = v3(0,3,0)
    bb.Enabled = false
    bb.Parent = ESPFolder

    local tl = Instance.new("TextLabel")
    tl.Size = UDim2.fromScale(1,1)
    tl.BackgroundTransparency = 1
    tl.Font = Enum.Font.SourceSansBold
    tl.TextSize = 20
    tl.Text = p.Name
    tl.TextColor3 = Color3.new(0,1,0)
    tl.Parent = bb

    task.spawn(function()
        while bb.Parent do
            task.wait(0.25)
            local head = p.Character and p.Character:FindFirstChild("Head")
            if head then bb.Adornee = head end
            local murd = p.Backpack:FindFirstChild("Knife") or (p.Character and p.Character:FindFirstChild("Knife"))
            local sher = p.Backpack:FindFirstChild("Gun") or (p.Character and p.Character:FindFirstChild("Gun"))
            if murd then
                tl.TextColor3 = Color3.new(1,0,0)
            elseif sher then
                tl.TextColor3 = Color3.new(0,0,1)
            else
                tl.TextColor3 = Color3.new(0,1,0)
            end
        end
    end)
    return bb
end
local BBs = {}
for _,p in ipairs(Players:GetPlayers()) do BBs[p] = addBB(p) end
Players.PlayerAdded:Connect(function(p) BBs[p] = addBB(p) end)
Players.PlayerRemoving:Connect(function(p) if BBs[p] then BBs[p]:Destroy(); BBs[p]=nil end end)

-- Gun highlight
local GunHL = Instance.new("Highlight")
GunHL.FillColor = Color3.fromRGB(248,241,174)
GunHL.OutlineTransparency = 1
GunHL.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
GunHL.Parent = ESPFolder
task.spawn(function()
    while ESPFolder.Parent do
        GunHL.Adornee = WS:FindFirstChild("GunDrop")
        task.wait(0.25)
    end
end)

TabESP:CreateToggle({
    Name = "Player ESP (names)",
    CurrentValue = false,
    Flag = "AllESP",
    Callback = function(v)
        for _,g in ipairs(ESPFolder:GetChildren()) do
            if g:IsA("BillboardGui") then g.Enabled = v end
        end
    end
})
TabESP:CreateToggle({
    Name = "Gun Highlight",
    CurrentValue = true,
    Flag = "GunESP",
    Callback = function(v) GunHL.Enabled = v end
})

-- Live role scan (for OP teleports)
getgenv().Murderer, getgenv().Sheriff = nil, nil
task.spawn(function()
    while true do
        task.wait(1)
        getgenv().Murderer, getgenv().Sheriff = nil, nil
        for _, v in ipairs(Players:GetPlayers()) do
            if v ~= LP then
                if (v.Backpack:FindFirstChild("Knife") or (v.Character and v.Character:FindFirstChild("Knife"))) then
                    getgenv().Murderer = v.Name
                end
                if (v.Backpack:FindFirstChild("Gun") or (v.Character and v.Character:FindFirstChild("Gun"))) then
                    getgenv().Sheriff = v.Name
                end
            end
        end
    end
end)

-------------------------------------------------
-- OP MODS
-------------------------------------------------
-- Teleports
local Teleports = {
    ["Lobby"] = Vector3.new(-121.123,138.273,38.946),
    ["Map"]   = Vector3.new(-107.908,138.349,-10.622),
    ["Safe Spot"] = Vector3.new(-121.123, 160, 38.946) -- above lobby
}
local tpOptions = {}; for k,_ in pairs(Teleports) do table.insert(tpOptions, k) end

TabOP:CreateDropdown({
    Name = "Quick Teleport",
    Options = tpOptions,
    CurrentOption = {"Lobby"},
    MultipleOptions = false,
    Flag = "QuickTP",
    Callback = function(opt)
        local choice = opt and opt[1]
        if choice and Root and Teleports[choice] then
            Root.CFrame = CFrame.new(Teleports[choice])
        end
    end
})

TabOP:CreateButton({
    Name = "Teleport to GUN",
    Callback = function()
        local g = WS:FindFirstChild("GunDrop")
        if g and Root then Root.CFrame = g.CFrame else tip("TP to Gun","Gun not dropped.",3) end
    end
})

TabOP:CreateButton({
    Name = "Teleport to MURDERER (behind)",
    Callback = function()
        local name = getgenv().Murderer
        local p = name and Players:FindFirstChild(name)
        local r = p and p.Character and p.Character:FindFirstChild("HumanoidRootPart")
        if r and Root then
            Root.CFrame = CFrame.new(r.Position - r.CFrame.LookVector * 3)
        else
            tip("TP to Murderer","Not detected yet.",3)
        end
    end
})

TabOP:CreateButton({
    Name = "Teleport to SHERIFF (behind)",
    Callback = function()
        local name = getgenv().Sheriff
        local p = name and Players:FindFirstChild(name)
        local r = p and p.Character and p.Character:FindFirstChild("HumanoidRootPart")
        if r and Root then
            Root.CFrame = CFrame.new(r.Position - r.CFrame.LookVector * 3)
        else
            tip("TP to Sheriff","Not detected yet.",3)
        end
    end
})

-- Teleport to player (simple snapshot list)
local function getPlayerNames()
    local lst = {}
    for _,p in ipairs(Players:GetPlayers()) do
        if p ~= LP then table.insert(lst, p.Name) end
    end
    table.sort(lst)
    return lst
end
local selected = {""}
TabOP:CreateDropdown({
    Name = "Teleport to Player",
    Options = getPlayerNames(),
    CurrentOption = {""},
    MultipleOptions = false,
    Flag = "TPPlayer",
    Callback = function(opt)
        selected[1] = opt and opt[1]
    end
})
TabOP:CreateButton({
    Name = "Go!",
    Callback = function()
        local n = selected[1]
        if not n or n == "" then tip("TP Player","Pick someone in the dropdown.",3) return end
        local p = Players:FindFirstChild(n)
        local r = p and p.Character and p.Character:FindFirstChild("HumanoidRootPart")
        if r and Root then Root.CFrame = r.CFrame else tip("TP Player","No character/root.",3) end
    end
})
TabOP:CreateButton({
    Name = "Refresh Player List",
    Callback = function()
        -- re-create dropdown options (Rayfield lacks dynamic SetOptions in some builds)
        Rayfield:Notify({Title="Players", Content="Re-open menu: list refreshed.", Duration=3, Image="users"})
    end
})

-- Nearest coin teleport
local function nearestCoin()
    local container = WS:FindFirstChild("CoinContainer", true)
    if not (container and Root) then return end
    local best, dist
    for _,v in ipairs(container:GetDescendants()) do
        if v.Name == "Coin_Server" and v:IsA("BasePart") and v.Parent and v.Parent.Parent then
            local d = (v.Position - Root.Position).Magnitude
            if not dist or d < dist then best, dist = v, d end
        end
    end
    return best
end
TabOP:CreateButton({
    Name = "Teleport to Nearest Coin",
    Callback = function()
        local c = nearestCoin()
        if c and Root then Root.CFrame = CFrame.new(c.Position - v3(0,2.5,0)) else tip("Nearest Coin","None found.",3) end
    end
})

-- Auto-pick, Auto-farm coins
getgenv().AutoPickGun = false
TabOP:CreateToggle({
    Name = "Auto-pick Gun (when dropped)",
    CurrentValue = false,
    Flag = "AutoGun",
    Callback = function(v)
        getgenv().AutoPickGun = v
        task.spawn(function()
            while getgenv().AutoPickGun do
                task.wait(0.25)
                local g = WS:FindFirstChild("GunDrop")
                if g and Root then Root.CFrame = g.CFrame end
            end
        end)
    end
})

getgenv().AutoCoins = false
TabOP:CreateToggle({
    Name = "Auto-collect Coins",
    CurrentValue = false,
    Flag = "AutoCoins",
    Callback = function(v)
        getgenv().AutoCoins = v
        task.spawn(function()
            while getgenv().AutoCoins do
                task.wait(0.25)
                local c = nearestCoin()
                if c and Root then Root.CFrame = CFrame.new(c.Position - v3(0,2.5,0)) end
            end
        end)
    end
})

-- Kill Aura (touch knife)
getgenv().KillAura = false
TabOP:CreateToggle({
    Name = "Kill Aura (Knife touch)",
    CurrentValue = false,
    Flag = "KillAura",
    Callback = function(v)
        getgenv().KillAura = v
    end
})
local function getKnife()
    return (LP.Backpack and LP.Backpack:FindFirstChild("Knife")) or (Char and Char:FindFirstChild("Knife"))
end
RS.Heartbeat:Connect(function()
    if not getgenv().KillAura then return end
    local knife = getKnife()
    if not (knife and knife:FindFirstChild("Handle")) then return end
    for _,pl in ipairs(Players:GetPlayers()) do
        if pl ~= LP and pl.Character and pl.Character:FindFirstChild("HumanoidRootPart") then
            local eroot = pl.Character.HumanoidRootPart
            if (eroot.Position - Root.Position).Magnitude < 5 then
                pcall(function()
                    firetouchinterest(eroot, knife.Handle, 1)
                    firetouchinterest(eroot, knife.Handle, 0)
                end)
            end
        end
    end
end)

-- Noclip
getgenv().Noclip = false
TabOP:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Flag = "Noclip",
    Callback = function(v) getgenv().Noclip = v end
})
RS.Stepped:Connect(function()
    if getgenv().Noclip and Char then
        for _,p in ipairs(Char:GetDescendants()) do
            if p:IsA("BasePart") then p.CanCollide = false end
        end
    end
end)

-- Spectate roles
getgenv().SpecMurderer, getgenv().SpecSheriff = false, false
TabOP:CreateToggle({
    Name = "Spectate Murderer",
    CurrentValue = false,
    Flag = "SpecMurd",
    Callback = function(v) getgenv().SpecMurderer = v; getgenv().SpecSheriff = false end
})
TabOP:CreateToggle({
    Name = "Spectate Sheriff",
    CurrentValue = false,
    Flag = "SpecSher",
    Callback = function(v) getgenv().SpecSheriff = v; getgenv().SpecMurderer = false end
})
RS.Heartbeat:Connect(function()
    local cam = WS.CurrentCamera
    if getgenv().SpecMurderer and getgenv().Murderer then
        local p = Players:FindFirstChild(getgenv().Murderer)
        local h = p and p.Character and p.Character:FindFirstChild("Head")
        if h then cam.CameraSubject = h end
    elseif getgenv().SpecSheriff and getgenv().Sheriff then
        local p = Players:FindFirstChild(getgenv().Sheriff)
        local h = p and p.Character and p.Character:FindFirstChild("Head")
        if h then cam.CameraSubject = h end
    end
end)

-------------------------------------------------
-- MAIN LOGIC Loader (your external script)
-------------------------------------------------
local function fetch(url, tries)
    local lastErr
    for i=1,(tries or 3) do
        local ok, res = pcall(function() return game:HttpGet(url,true) end)
        if ok and type(res)=="string" and #res>0 then return res end
        lastErr = res
        Rayfield:Notify({Title="Main Logic", Content=("Retry %d/3"):format(i), Duration=2, Image="refresh-ccw"})
        task.wait(0.75*i)
    end
    return nil, tostring(lastErr)
end
local function run_logic()
    local src, err = fetch(MAIN_LOGIC_URL,3)
    if not src then Rayfield:Notify({Title="Main Logic", Content="Fetch failed: "..(err or "unknown"), Duration=6, Image="triangle-alert"}); return false end
    local fn, cerr = loadstring(src)
    if not fn then Rayfield:Notify({Title="Main Logic", Content="Compile error: "..tostring(cerr), Duration=6, Image="x"}); return false end
    local ok, rerr = pcall(fn)
    if not ok then Rayfield:Notify({Title="Main Logic", Content="Runtime error: "..tostring(rerr), Duration=6, Image="bug"}); return false end
    Rayfield:Notify({Title="Main Logic", Content="Loaded successfully ✅", Duration=4, Image="check"})
    return true
end

TabLogic:CreateButton({ Name="Load Main Logic (GitHub)", Callback = run_logic })
TabLogic:CreateToggle({
    Name = "Auto-run on launch",
    CurrentValue = AUTORUN_MAIN_LOGIC,
    Flag = "AutoRunLogic",
    Callback = function(v) AUTORUN_MAIN_LOGIC = v end
})
task.defer(function() if AUTORUN_MAIN_LOGIC then run_logic() end end)

-------------------------------------------------
-- MISC (Discord, Unlock, Teleport picker)
-------------------------------------------------
-- Discord invite button (copies link; some executors allow open via 'request')
TabMisc:CreateButton({
    Name = "Join our Discord (copy invite)",
    Callback = function()
        local ok = pcall(function() if setclipboard then setclipboard(DISCORD_INVITE) end end)
        if ok then
            Rayfield:Notify({Title="Discord", Content="Invite copied to clipboard. Paste in your browser.", Duration=5, Image="clipboard-check"})
        else
            Rayfield:Notify({Title="Discord", Content=DISCORD_INVITE, Duration=6, Image="link"})
        end
        -- optional: try to open with executor HTTP (commented for safety)
        -- pcall(function() if syn and syn.request then syn.request({Url=DISCORD_INVITE, Method="GET"}) end end)
    end
})

-- Unlock workspace
TabMisc:CreateButton({
    Name = "Unlock Workspace",
    Callback = function()
        local function unlock(o)
            for _,v in ipairs(o:GetChildren()) do
                if v:IsA("BasePart") then v.Locked = false end
                unlock(v)
            end
        end
        unlock(WS)
        tip("Unlock","Tried to unlock BaseParts.",3)
    end
})

-- Extra teleports (same set as QuickTP, just another UI)
local opts = {}; for k,_ in pairs(Teleports) do table.insert(opts,k) end
TabMisc:CreateDropdown({
    Name = "Teleport To",
    Options = opts,
    CurrentOption = {"Lobby"},
    MultipleOptions = false,
    Flag = "TPChoice",
    Callback = function(opt)
        local choice = opt and opt[1]
        if choice and Root and Teleports[choice] then
            Root.CFrame = CFrame.new(Teleports[choice])
        end
    end
})

TabMisc:CreateKeybind({
    Name = "Toggle UI",
    CurrentKeybind = "K",
    HoldToInteract = false,
    Flag = "ToggleKey",
    Callback = function() end
})

Rayfield:Notify({Title="Seagull MM2", Content="OP build loaded. Press K to hide/show.", Duration=4, Image="sparkles"})
print("[Seagull] OP UI ready.")
