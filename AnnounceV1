-- GlobalAnnouncementServer.lua
-- Single-server script to announce a message to all players.
-- Place this script in ServerScriptService.

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Configuration defaults (change as needed)
local DEFAULT_DURATION = 6           -- seconds the message is visible
local BG_TRANSPARENCY = 0.25        -- frame background transparency
local TEXT_SCALE = 2                -- TextSize scale (used with TextScaled = true)

-- Helper: create the ScreenGui + visible text for one player
local function createAnnouncementGui(player, message, duration)
    if not player or not player.Parent then return end
    local playerGui = player:WaitForChild("PlayerGui", 5)
    if not playerGui then return end

    -- avoid duplicate by removing any existing one first
    local existing = playerGui:FindFirstChild("GlobalAnnouncement")
    if existing then existing:Destroy() end

    -- Build GUI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "GlobalAnnouncement"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true
    screenGui.Parent = playerGui

    local frame = Instance.new("Frame")
    frame.Name = "BG"
    frame.Size = UDim2.new(0.9, 0, 0.12, 0)           -- 90% width, 12% height
    frame.Position = UDim2.new(0.05, 0, -0.14, 0)     -- start off-screen (above)
    frame.AnchorPoint = Vector2.new(0, 0)
    frame.BackgroundTransparency = BG_TRANSPARENCY
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    frame.LayoutOrder = 1
    frame.ClipsDescendants = true

    local label = Instance.new("TextLabel")
    label.Name = "Message"
    label.Size = UDim2.new(1, -24, 1, -12)           -- padding inside frame
    label.Position = UDim2.new(0, 12, 0, 6)
    label.AnchorPoint = Vector2.new(0, 0)
    label.BackgroundTransparency = 1
    label.Text = tostring(message or "")
    label.TextScaled = true
    label.RichText = false
    label.Font = Enum.Font.GothamBold
    label.TextWrapped = true
    label.Parent = frame

    -- Simple slide-in tween from above, then slide-out and destroy
    local tweenIn = TweenService:Create(frame, TweenInfo.new(0.45, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.05, 0, 0.03, 0)})
    local tweenOut = TweenService:Create(frame, TweenInfo.new(0.45, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(0.05, 0, -0.14, 0)})

    tweenIn:Play()
    -- After duration, tween out and destroy
    delay(duration or DEFAULT_DURATION, function()
        if tweenOut.PlaybackState == Enum.PlaybackState.Playing then return end
        tweenOut:Play()
        tweenOut.Completed:Wait()
        if screenGui and screenGui.Parent then
            screenGui:Destroy()
        end
    end)
end

-- Announce to every current player (and remember last announcement so new joiners also see it)
local lastAnnouncement = {
    text = nil,
    duration = DEFAULT_DURATION,
    timestamp = 0,
    expiry = 0
}

local function announceAll(text, duration)
    duration = tonumber(duration) or DEFAULT_DURATION
    text = tostring(text or "")
    if text == "" then return end

    -- Save so future joiners can see (optional behaviour)
    lastAnnouncement.text = text
    lastAnnouncement.duration = duration
    lastAnnouncement.timestamp = tick()
    lastAnnouncement.expiry = lastAnnouncement.timestamp + math.max(1, duration) + 2 -- small buffer

    for _, player in ipairs(Players:GetPlayers()) do
        -- spawn to avoid blocking
        spawn(function()
            createAnnouncementGui(player, text, duration)
        end)
    end
end

-- PlayerAdded: show last announcement if still recent
Players.PlayerAdded:Connect(function(player)
    -- show existing announcement if still valid
    if lastAnnouncement.text and tick() <= lastAnnouncement.expiry then
        -- slight delay to ensure PlayerGui exists
        delay(0.5, function()
            createAnnouncementGui(player, lastAnnouncement.text, lastAnnouncement.duration)
        end)
    end
end)

-- Optional: expose announceAll as global for quick one-line calls from this script
_G.GlobalAnnounce = announceAll

-- Example usage: automatically announce on server start (comment out if not wanted)
-- announceAll("Server maintenance in 10 minutes. Please save your progress.", 6)

-- If you want to trigger announcements from the command bar while testing,
-- call: require(game.ServerScriptService.GlobalAnnouncementServer).announceAll("Hello", 5)
-- (or use the exposed _G.GlobalAnnounce from the command bar)
return {
    announceAll = announceAll
}
